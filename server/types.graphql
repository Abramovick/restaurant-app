# The following types define the data model of the example service
# based on which the GraphQL API is generated

 type User @model {
   # Required system field:
   id: ID! @isUnique # read-only (managed by Graphcool)

   # Optional system fields (remove if not needed):
   createdAt: DateTime! # read-only (managed by Graphcool)
   updatedAt: DateTime! # read-only (managed by Graphcool)
   firstName: String
   lastName: String
   password: String
   phoneNum: String
   email: String @isUnique
   facebookUserId: String @isUnique
   reviews: [Review!]! @relation(name: "UseronReview")
   orders: [Order!]! @relation(name: "UseronOrder")
 }

 type Order @model {
   id: ID! @isUnique # read-only (managed by Graphcool)
   total: Int!
   items: [Json!]
   user: User @relation(name: "UseronOrder")
   address: String
   createdAt: DateTime! # read-only (managed by Graphcool)
   updatedAt: DateTime! # read-only (managed by Graphcool)
 }

 type Product @model {
   id: ID! @isUnique # read-only (managed by Graphcool)
   name: String!
   description: String!
   price: Int!
   imageUrl: String!
   reviews: [Review!]! @relation(name: "ProductonReview")
   createdAt: DateTime! # read-only (managed by Graphcool)
   updatedAt: DateTime! # read-only (managed by Graphcool)
 }

  type Review @model {
   id: ID! @isUnique # read-only (managed by Graphcool)
   product: Product @relation(name: "ProductonReview")
   user: User @relation(name: "UseronReview")
   rating: Int
   review: String!
   createdAt: DateTime! # read-only (managed by Graphcool)
   updatedAt: DateTime! # read-only (managed by Graphcool)
 }



